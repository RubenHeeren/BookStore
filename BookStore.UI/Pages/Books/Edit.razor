@page "/books/edit/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _authorRepo
@inject IBookRepository _bookRepo
@inject NavigationManager _navManager
@inject IToastService _toastService
@using System.IO

<h1 class="card-title">Edit book</h1>
<br />
<hr />
<br />

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessageDiv TextErrorMessage="Invalid selection. Please try again." />
}
else if (_model == null)
{
    <ErrorMessageDiv TextErrorMessage="Loading book details..." />
}
else
{
    <EditForm Model="_model" OnValidSubmit="UpdateBook">
        <DataAnnotationsValidator />
        <ValidationSummary />

        <div class="form-group">
            <label for="title">Book title</label>
            <InputText @bind-Value="_model.Title" class="form-control" id="title" />
        </div>

        <div class="form-group">
            <label for="isbn">ISBN</label>
            <InputText @bind-Value="_model.Isbn" class="form-control" id="isbn" />
        </div>

        <div class="form-group">
            <label for="price">Price</label>
            <InputNumber @bind-Value="_model.Price" class="form-control" id="price" />
        </div>

        <div class="form-group">
            <label for="price">Authors</label>
            <select @bind="_model.AuthorId" class="form-control" id="author">
                <option value="">-- Select author --</option>
                @if (_authors != null)
                {
                    foreach (var author in _authors)
                    {
                        <option value="@author.Id">@author.Firstname @author.Lastname</option>
                    }
                }
            </select>
        </div>

        <div class="form-group">
            <label for="summmary">Summary</label>
            <InputTextArea @bind-Value="_model.Summary" class="form-control" id="summary" />
        </div>

        <button class="btn btn-primary" type="submit">
            <span class="oi oi-pencil"></span> Submit changes
        </button>

        <button @onclick="BackToList" class="btn btn-outline-primary">
            <span class="oi oi-media-skip-backward"></span> Back to all books
        </button>
    </EditForm>
}

@code {
    [Parameter]
    public string Id { get; set; }

    private Book _model = new Book();
    private IList<Author> _authors;
    private bool _isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        _model = await _bookRepo.Get(Endpoints.BooksEndpoint, int.Parse(Id));
        _authors = await _authorRepo.Get(Endpoints.AuthorsEndpoint);
    }

    private async Task UpdateBook()
    {
        _isSuccess = await _bookRepo.Update(Endpoints.BooksEndpoint, _model, _model.Id);

        if (_isSuccess)
        {
            _toastService.ShowSuccess("Your changes have been committed to the database.", "Success");
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }
}