@page "/books/delete/{Id}"
@attribute [Authorize(Roles = "Administrator")]
@inject IBookRepository _bookRepo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h1 class="card-title" style="color: red;">Are you sure you want to delete this book?</h1>
<br />
<hr />
<br />

@if (isSuccess == false)
{
    <ErrorMessageDiv TextErrorMessage="Something went wrong with your deletion attempt."></ErrorMessageDiv>
}

@if (int.Parse(Id) < 1 || string.IsNullOrWhiteSpace(Id))
{
    <ErrorMessageDiv TextErrorMessage="Invalid selection. Please try again." />
}
else if (_model == null)
{
    <LoadingModelMessage LoadingMessage="Loading author details..."></LoadingModelMessage>
}
else
{
    <div class="row">
        <div class="col-6">
            <table class="table table-responsive">
                <tr>
                    <td>
                        <strong>Title</strong>
                    </td>
                    <td>@_model.Title</td>
                </tr>
                <tr>
                    <td>
                        <strong>Author</strong>
                    </td>
                    <td>
                        @if (_model.Author == null)
                        {
                            <span class="text-muted">None</span>
                        }
                        else
                        {
                            <a href="/authors/details/@_model.AuthorId">@_model.Author.Firstname @_model.Author.Lastname</a>
                        }
                    </td>
                </tr>
                <tr>
                    <td>
                        <strong>Summary</strong>
                    </td>
                    <td>@_model.Summary</td>
                </tr>
                <tr>
                    <td>
                        <strong>Year</strong>
                    </td>
                    <td>@_model.Year</td>
                </tr>
                <tr>
                    <td>
                        <strong>ISBN</strong>
                    </td>
                    <td>@_model.Isbn</td>
                </tr>
                <tr>
                    <td>
                        <strong>Price</strong>
                    </td>
                    <td>@_model.Price</td>
                </tr>
            </table>
        </div>
    </div>
}

<br />

<button @onclick="DeleteBook" class="btn btn-danger">
    <span class="oi oi-delete"></span> Delete
</button>

<button @onclick="BackToList" class="btn btn-outline-primary">
    <span class="oi oi-media-skip-backward"></span> Back to all authors
</button>

@code {
    [Parameter]
    public string Id { get; set; }

    private Book _model = new Book();
    private bool isSuccess = true;

    protected override async Task OnInitializedAsync()
    {
        _model = await _bookRepo.Get(Endpoints.BooksEndpoint, int.Parse(Id));
    }

    private async Task DeleteBook()
    {
        isSuccess = await _bookRepo.Delete(Endpoints.BooksEndpoint, _model.Id);

        if (isSuccess)
        {
            _toastService.ShowSuccess("Your changes have been committed to the database.", "Success");
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/books/");
    }
}
