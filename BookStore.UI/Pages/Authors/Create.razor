@page "/authors/create/"
@attribute [Authorize(Roles = "Administrator")]
@inject IAuthorRepository _repo
@inject NavigationManager _navManager
@inject IToastService _toastService

<h3 class="card-title">Create new author</h3>
<br />
<hr />
<br />

@if (isSuccess == false)
{
    <ErrorMessageDiv TextErrorMessage="Something went wrong with your creation attempt."></ErrorMessageDiv>
}

<EditForm Model="Model" OnValidSubmit="CreateAuthor">
    @* Use ASP.NET data annotations. *@
    <DataAnnotationsValidator />
    <ValidationSummary />

    <div class="form-group">
        <label for="firstname">First name</label>
        <InputText @bind-Value="Model.Firstname" class="form-control" id="firstname"></InputText>
    </div>

    <div class="form-group">
        <label for="lastname">Last name</label>
        <InputText @bind-Value="Model.Lastname" class="form-control" id="lastname"></InputText>
    </div>

    <div class="form-group">
        <label for="lastname">Biography</label>
        <InputText @bind-Value="Model.Bio" class="form-control" id="bio"></InputText>
    </div>

    <button class="btn btn-success" type="submit">
        <span class="oi oi-plus"></span> Create author
    </button>

    <button @onclick="BackToList" class="btn btn-outline-primary">
        <span class="oi oi-media-skip-backward"></span> Back to all authors
    </button>
</EditForm>

@code {
    private Author Model = new Author();
    private bool isSuccess = true;

    private async Task CreateAuthor()
    {
        isSuccess = await _repo.Create(Endpoints.AuthorsEndpoint, Model);

        if (isSuccess)
        {
            _toastService.ShowSuccess("Your changes have been committed to the database.", "Success");
            BackToList();
        }
    }

    private void BackToList()
    {
        _navManager.NavigateTo("/authors/");
    }
}
