@page "/login"
@inject IAuthenticationRepository _authrepo
@inject NavigationManager _navManager

<div class="card">
    <h3 class="card-title">Log in</h3>
    @if (loginAttemptSuccessful == false)
    {
        <div class="alert alert-danger">
            <p>Something went wrong with your log in attempt.</p>
        </div>
    }
    <div class="card-body">
        <EditForm Model="_loginModel" OnValidSubmit="LoginUser">
            <DataAnnotationsValidator />
            <ValidationSummary />
            <div class="form-group">
                <label for="email">Email address</label>
                <InputText Id="email" class="form-control" @bind-Value="_loginModel.EmailAddress" />
                <ValidationMessage For="@(() => _loginModel.EmailAddress)" />
            </div>
            <div class="form-group">
                <label for="password">Password</label>
                <InputText Id="password" type="password" class="form-control" @bind-Value="_loginModel.Password" />
                <ValidationMessage For="@(() => _loginModel.Password)" />
            </div>
            <button type="submit" class="btn btn-primary btn-block">Log in</button>
        </EditForm>
    </div>
</div>

@code {
    private LoginModel _loginModel = new LoginModel();

    private bool loginAttemptSuccessful = true;

    private async Task LoginUser()
    {
        loginAttemptSuccessful = await _authrepo.Login(_loginModel);

        if (loginAttemptSuccessful)
        {
            _navManager.NavigateTo("/");
        }
    }
}
