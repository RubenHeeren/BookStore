@page "/login"
@inject IAuthenticationRepository _authrepo
@inject NavigationManager _navManager


<h1 class="card-title">Log in</h1>
<br />
<hr />
<br />

<h4><strong>Administrator demo account credentials</strong></h4>
<p><strong>Email address:</strong> admin@bookstore.com</p>
<p><strong>Password:</strong> P@ssword1</p>

<br />
<hr />
<br />

<h4><strong>Customer demo account credentials</strong></h4>
<p><strong>Email address:</strong> customer1@gmail.com</p>
<p><strong>Password:</strong> P@ssword1</p>

@if (loginAttemptSuccessful == false)
{
    <ErrorMessageDiv TextErrorMessage="Something went wrong with your log in attempt." />
}

<div class="card-body">
    <EditForm Model="_loginModel" OnValidSubmit="LoginUser">
        <DataAnnotationsValidator />
        <ValidationSummary />
        <div class="form-group">
            <label for="email">Email address</label>
            <InputText Id="email" class="form-control" @bind-Value="_loginModel.EmailAddress" />
            <ValidationMessage For="@(() => _loginModel.EmailAddress)" />
        </div>
        <div class="form-group">
            <label for="password">Password</label>
            <InputText Id="password" type="password" class="form-control" @bind-Value="_loginModel.Password" />
            <ValidationMessage For="@(() => _loginModel.Password)" />
        </div>
        <button type="submit" class="btn btn-primary btn-block">Log in</button>
    </EditForm>
</div>


@code {
    private LoginModel _loginModel = new LoginModel();

    private bool loginAttemptSuccessful = true;

    private async Task LoginUser()
    {
        loginAttemptSuccessful = await _authrepo.Login(_loginModel);

        if (loginAttemptSuccessful)
        {
            _navManager.NavigateTo("/");
        }
    }
}
