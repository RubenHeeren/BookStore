<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BookStore.API</name>
    </assembly>
    <members>
        <member name="T:BookStore.API.Contracts.IRepositoryBase`1">
            <summary>
            This is a demonstration of generics and asynchrous programming.
            Facilitates CRUD operations with persistance to the database.
            </summary>
        </member>
        <member name="T:BookStore.API.Controllers.AuthorsController">
            <summary>
            Endpoint used to interact with the Authors in the book store's database.
            </summary>
        </member>
        <member name="M:BookStore.API.Controllers.AuthorsController.GetAuthors">
            <summary>
            Get all Authors.
            </summary>
            <returns>A list of Authors.</returns>
        </member>
        <member name="M:BookStore.API.Controllers.AuthorsController.GetAuthor(System.Int32)">
            <summary>
            Get an Author by ID (primary key).
            </summary>
            <param name="id"></param>
            <returns>A single Author</returns>
        </member>
        <member name="M:BookStore.API.Controllers.AuthorsController.Create(BookStore.API.DTOs.AuthorCreateDTO)">
            <summary>
            Creates an Author.
            </summary>
            <param name="authorCreateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.AuthorsController.Update(System.Int32,BookStore.API.DTOs.AuthorUpdateDTO)">
            <summary>
            Updates an Author by id.
            </summary>
            <param name="id"></param>
            <param name="authorUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.AuthorsController.Delete(System.Int32)">
            <summary>
            Deletes an Author by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="T:BookStore.API.Controllers.BooksController">
            <summary>
            Endpoint used to interact with the Books in the book store's database.
            </summary>
        </member>
        <member name="M:BookStore.API.Controllers.BooksController.GetBooks">
            <summary>
            Get all Books.
            </summary>
            <returns>A list of Books.</returns>
        </member>
        <member name="M:BookStore.API.Controllers.BooksController.GetBook(System.Int32)">
            <summary>
            Get an Book by ID (primary key).
            </summary>
            <param name="id"></param>
            <returns>A single Book</returns>
        </member>
        <member name="M:BookStore.API.Controllers.BooksController.Create(BookStore.API.DTOs.BookCreateDTO)">
            <summary>
            Creates an Book.
            </summary>
            <param name="bookCreateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.BooksController.Update(System.Int32,BookStore.API.DTOs.BookUpdateDTO)">
            <summary>
            Updates an Book by id.
            </summary>
            <param name="id"></param>
            <param name="bookUpdateDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.BooksController.Delete(System.Int32)">
            <summary>
            Deletes an Book by id.
            </summary>
            <param name="id"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.UsersController.Register(BookStore.API.DTOs.UserDTO)">
            <summary>
            User register endpoint
            </summary>
            <param name="userDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Controllers.UsersController.Login(BookStore.API.DTOs.UserDTO)">
            <summary>
            User login endpoint
            </summary>
            <param name="userDTO"></param>
            <returns></returns>
        </member>
        <member name="M:BookStore.API.Services.AuthorRepository.FindById(System.Int32)">
            <summary>
            Where id is primary key.
            </summary>
        </member>
        <member name="M:BookStore.API.Services.BookRepository.FindById(System.Int32)">
            <summary>
            Where id is primary key.
            </summary>
        </member>
    </members>
</doc>
